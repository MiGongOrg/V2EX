<style type="less">
  .nodeListContainer {}
</style>

<template>
  <view class="nodeListContainer">
    <nodeinfo></nodeinfo>
    <repeat for="{{list}}" item="item">
      <postItem :item="item"></postItem>
    </repeat>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { API, TOOL } from '@/common'
  import { HTTP } from 'wepy-utils'
  import nodeInfo from '../components/nodeInfo'
  import PostItem from '../components/postItem'

  export default class nodeList extends wepy.page {
    // 页面配置
    config = {
      'navigationBarTextStyle': 'white',
      'navigationBarBackgroundColor': '#001d25'
    }
    // 模板初始绑定数据
    data = {
      list: [],
      nodeName: ''
    }
    // 声明页面中将要使用到的组件
    components = {
      nodeinfo: nodeInfo,
      postItem: PostItem
    }
    // 请求数据
    request (options) {
      let id = options.id
      let url = API.topics.show
      let params = {
        'node_id': id
      }
      HTTP.get({
        url: url,
        params: params,
        mask: true
      }).then((data) => {
        let type = 'avatar_large'
        // 头像URL替换
        data = TOOL.replace(data, type)
        this.nodeName = options.title
        this.list = data
        this.$apply()
      })
    }
    // 生命周期函数，页面加载
    onLoad (options) {
      // 设置当前页面的标题
      wepy.setNavigationBarTitle({
        title: options.title
      })
      // 调用组件 nodeinfo 中的 request 方法，并传递参数对象 options
      this.$invoke('nodeinfo', 'request', options)
      this.request(options)
    }
    // 生命周期函数，初次渲染完成
    onReady () {}
    // 监听用户下拉动作
    onPullDownRefresh () {
      // 加载数据完成后停止下拉状态
      wepy.stopPullDownRefresh()
    }
  }
</script>
