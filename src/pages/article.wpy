<style type="less">
  @import "./../common/wxParse/wxParse.wxss";
  .articleContainer {
    padding: 10rpx;
    background-color: #e2e2e2;
    .articleContent, .articleComment {
      background-color: #ffffff;
      border-radius: 6rpx;
      box-shadow: 0 4rpx 6rpx rgba(0, 0, 0, 0.1);
      border-bottom: 2rpx solid #e2e2e2;
    }
    .articleHeader {
      padding: 10rpx;
      border-bottom: 2rpx solid #e2e2e2;
    }
    .userAndNode {
      display: flex;
      justify-content: space-between;
      navigator {
        color: #778087;
        font-size: 30rpx;
      }
    }
    .userAvatar {
      vertical-align: middle;
      width: 72rpx;
      height: 72rpx;
    }
    .shape {
      .userAvatar {
        background-color: #e2e2e2;
      }
    }
    .nodeNav {
      display: flex;
      justify-content:center;
      align-items:center;
      &:hover, &:active {
        background-color: transparent;
      }
    }
    .shape {
      .nodeNav {
        text {
          position: relative;
          height: 48rpx;
          &:before, &:after {
            content: '';
            position: absolute;
            left: 0;
            min-height: 15rpx;
            background-color: #e2e2e2;
          }
          &:before {
            top: 4rpx;
            min-width: 100rpx;
          }
          &:after {
            bottom: 4rpx;
            min-width: 200rpx;
          }
        }
      }
    }
    .nodeAvatar {
      vertical-align: middle;
      width: 48rpx;
      height: 48rpx;
      margin-right: 10rpx;
    }
    .shape {
      .nodeAvatar {
        background-color: #e2e2e2;
      }
    }
    .title {
      display:block;
      font-size: 44rpx;
      margin: 10rpx 0 24rpx 0;
    }
    .shape {
      .title {
        position: relative;
        height: 70rpx;
        &:before, &:after {
          content: '';
          position: absolute;
          left: 0;
          min-height: 30rpx;
          background-color: #e2e2e2;
        }
        &:before {
          top: 0;
          min-width: 300rpx;
        }
        &:after {
          bottom: 0;
          min-width: 500rpx;
        }
      }
    }
    .userinfo {
      display: flex;
      justify-content: space-between;
      align-items: center;
      font-size: 24rpx;
      color: #999999;
      navigator {
        display: inline-block;
      }
    }
    .shape {
      .by {
        position: relative;
        min-width: 200rpx;
        min-height: 30rpx;
        &:before {
          content: '';
          position: absolute;
          top: 0;
          right: 0;
          bottom: 0;
          left: 0;
          background-color: #e2e2e2;
        }
      }
    }
    .shareBtn {
      image {
        display: block;
        width: 32rpx;
        height: 32rpx;
        vertical-align: middle;
      }
      button {
        background-color: transparent;
        padding: 10rpx;
        &:after {
          border: none;
        }
      }
    }
    .article {
      padding: 10rpx;
      font-size: 28rpx;
      color: #000000;
      word-wrap: break-word;
      image {
        display:block;
        margin: 0 auto;
      }
    }
    .articleComment {
      margin-top: 10rpx;
    }
    .commentHeader {
      color: #999999;
      padding: 10rpx;
      font-size: 28rpx;
      border-bottom: 2rpx solid #e2e2e2;
    }
    .commentCount {
      border-right: 4rpx solid #e2e2e2;
      padding-right:20rpx;
      margin-right:20rpx;
    }
    .noComments {
      font-size: 28rpx;
      padding: 10rpx;
      color: #cccccc;
      text {
        box-sizing:border-box;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100rpx;
        width: 100%;
        border: 4rpx dashed rgba(0, 0, 0, 0.1);
        border-radius: 6rpx;
      }
    }
  }
</style>

<template>
  <import src="./../common/wxParse/wxParse.wxml" />
  <view class="articleContainer">
    <view class="articleContent">
      <view class="articleHeader {{article.title ? '' : 'shape'}}">
        <view class="userAndNode">
          <navigator class="nodeNav" url="/pages/nodeList?id={{article.node.id}}&title={{article.node.title}}">
            <image class="nodeAvatar" src="{{article.node.avatar_normal === avatar.diff ? avatar.normal : article.node.avatar_normal}}"></image>
            <text>{{article.node.title}}</text>
          </navigator>
          <navigator url="/pages/user?id={{article.member.id}}&username={{article.member.username}}">
            <image class="userAvatar" src="{{article.member.avatar_large}}"></image>
          </navigator>
        </view>
        <text class="title">{{article.title}}</text>
        <view class="userinfo">
          <view class="by">By <navigator url="/pages/user?id={{article.member.id}}&username={{article.member.username}}">{{article.member.username}}</navigator> at {{article.created}}</view>
          <view class="shareBtn">
            <button open-type="share"><image src="../images/ic_share.png"></image></button>
          </view>
        </view>
      </view>
      <view class="article">
        <template is="wxParse" data="{{wxParseData:rendered.nodes}}" />
      </view>
    </view>
    <view class="articleComment">
      <view class="commentHeader">
        <text class="commentCount">{{article.replies}} 回复</text>
        <text>{{article.created}}</text>
      </view>
      <block wx:if="{{article.replies}}">
        <comment></comment>
      </block>
      <view class="noComments" wx:else>
        <text>目前尚无回复</text>
      </view>
    </view>
    <commentEdit></commentEdit>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { API, TOOL } from '@/common'
  import { HTTP } from 'wepy-utils'
  import CommentEdit from '../components/commentEdit'
  import Comment from '../components/comment'
  import Footer from '../components/footer'
  import WxParse from '../common/wxParse/wxParse'

  export default class Article extends wepy.page {
    // 模板初始绑定数据
    data = {
      article: {},
      avatar: {
        diff: '/static/img/node_normal.png',
        normal: '../images/node_normal.png'
      }
    }
    methods = {
      wxParseTagATap () {
        console.log('点击了链接')
      },
      wxParseImgLoad (event) {
        console.log('ImgLoad')
      },
      // 预览图片
      wxParseImgTap (e) {
        var that = this
        var nowImgUrl = e.target.dataset.src
        var tagFrom = e.target.dataset.from
        if (typeof (tagFrom) !== 'undefined' && tagFrom.length > 0) {
          wepy.previewImage({
            current: nowImgUrl, // 当前显示图片的http链接
            urls: that.bindData[tagFrom].imageUrls // 需要预览的图片http链接列表
          })
        }
      },
      // 文章转发
      onShareAppMessage () {
        return {
          success: function () {
            console.log('转发成功了')
          },
          fail: function () {
            console.log('转发失败')
          }
        }
      }
    }
    // 声明页面中将要使用到的组件
    components = {
      commentEdit: CommentEdit,
      comment: Comment,
      footer: Footer
    }
    // 请求数据
    request (options) {
      let id = options.id
      let url = API.topics.show
      let params = {
        id: id
      }

      HTTP.get({
        url: url,
        params: params,
        mask: true
      }).then((data) => {
        this.node = data
        let type = 'avatar_large'
        // 头像URL替换
        data = TOOL.replace(data, type)
        let article = data[0]
        let rendered = article.content_rendered

        WxParse.wxParse('rendered', 'html', rendered, this, 0)

        this.article = article

        this.$apply()
        // 设置当前页面的标题
        wepy.setNavigationBarTitle({
          title: this.article.title
        })
      })
    }
    // 生命周期函数，页面加载
    onLoad (options) {
      // 导航条 Loading
      wepy.showNavigationBarLoading()
      this.request(options)
      // 调用组件 comment 中的 request 方法，并传递参数对象 options
      this.$invoke('comment', 'request', options)
    }
    // 生命周期函数，初次渲染完成
    onReady () {
      // 隐藏导航条 Loading
      wepy.hideNavigationBarLoading()
    }
  }
</script>
